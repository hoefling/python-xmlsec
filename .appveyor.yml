environment:
  global:
    TWINE_NON_INTERACTIVE: true
    TWINE_USERNAME: __token__
    TWINE_PASSWORD:
      secure: vI6C+FJexzk8S03SW+6DPhu6w5SILZ7yX10Xyh1G33YVXiUgDA0Erin+DLDYGJtmMATQcHayo0qMyo6rkJ7B+0uP41t+NSUsDx4equCYnzKu/GnCq9Fi9aWhbegT6UiSWoJ7H0DMRXZMcFY9jIhCo4VBDTpMn0mISYHJJXaIpsFzA1pnEZ1LDBRzLqZ/RHFV6QtKwYd6iI1j0QdqBTlT51JmlpjhgGs3rnrNp0FVQ5fVtbioLWwwD8L//LU4ec56h2AwF3nuvDcIHliAPHqG5w==
  matrix:
  - python: 35
  - python: 35-x64
  - python: 36
  - python: 36-x64
  - python: 37
  - python: 37-x64
  - python: 38
  - python: 38-x64
  - python: 39
    python_version: 3.9.5
  - python: 39-x64
    python_version: 3.9.5

install:
  - ps: |
      # from https://github.com/appveyor/build-images/blob/27bde614bc60d7ef7a8bc46182f4d7582fa11b56/scripts/Windows/install_python.ps1#L88-L108
      function InstallPythonEXE($targetPath, $version) {
        $urlPlatform = ""
        if ($targetPath -match '-x64$') {
            $urlPlatform = "-amd64"
        }
        Write-Host "Installing Python $version$urlPlatform to $($targetPath)..." -ForegroundColor Cyan
        $downloadUrl = "https://www.python.org/ftp/python/$version/python-$version$urlPlatform.exe"
        Write-Host "Downloading $($downloadUrl)..."
        $exePath = "$env:TEMP\python-$version.exe"
        (New-Object Net.WebClient).DownloadFile($downloadUrl, $exePath)
        Write-Host "Installing..."
        cmd /c start /wait $exePath /quiet TargetDir="$targetPath" Shortcuts=0 Include_launcher=1 InstallLauncherAllUsers=1 Include_debug=1
        Remove-Item $exePath
        Write-Host "Installed Python $version" -ForegroundColor Green
      }
      if ( -not ( Test-Path -Path C:\\Python$env:PYTHON -PathType Container ) ) {
        InstallPythonEXE C:\\Python$env:PYTHON $env:PYTHON_VERSION
      }
  - SET PATH=C:\\Python%PYTHON%;c:\\Python%PYTHON%\\scripts;%PATH%
  - python -m pip install -U pip wheel setuptools

build: off
build_script:
  - python setup.py bdist_wheel

test: off
test_script:
  - pip install -r requirements-test.txt
  - pip install xmlsec --only-binary=xmlsec --no-index --find-links=dist
  - pytest -v --color=yes --junitxml=unittests.xml
  - ps: Get-ChildItem dist\*.whl | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }

on_finish:
  - ps: |
      # archive test results at AppVeyor
      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\unittests.xml))
      $LastExitCode = 0

deploy: on
deploy_script:
  - ps: >-
      If ($env:APPVEYOR_REPO_TAG -eq $TRUE) {
        pip install twine
        twine upload dist/*.whl
      }
